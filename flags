#!/bin/sh

set -eu

usage() {
    echo "Usage: ${0} [--release/--debug] --player[#] --gc[GameController IP] [optional: extra compiler arguments...]" >&2
    exit 1
}

if [ ${#} -lt 2 ]; then
    usage
elif [ ${#} -lt 3 ]; then
    echo "Note: your IP address is $(ifconfig | grep 'inet ' | grep -v '127.0.0.1' | cut -dt -f2 | cut -d\  -f2)"
    usage
fi

# make sure we're in .../robocup-upennalizers
if [ $(pwd | rev | cut -d '/' -f1) != "srezilannepu-pucobor" ]; then
    echo "Please run this script from the main project directory (.../robocup-upennalizers)" >&2
    exit 1
fi

if [ ${1} = "--release" ]; then
    DEBUG=0
elif [ ${1} = "--debug" ]; then
    DEBUG=1
else
    echo "Unrecognized second argument" >&2
    usage
fi

if [ $(echo ${2} | cut -c1-8) = "--player" ]; then
    PLAYER=$(echo ${2} | cut -c9-)
else
    echo "Unrecognized third argument" >&2
    usage
fi

if [ $(echo ${3} | cut -c1-4) = "--gc" ]; then
    GAMECONTROLLER_IP=$(echo ${3} | cut -c5-)
else
    echo "Unrecognized fourth argument" >&2
    usage
fi

mkdir -p bin
EXECNAME=start # $(basename ${1} | cut -d. -f1)
MACROS="-DPLAYER=${PLAYER} -DGAMECONTROLLER_IP=${GAMECONTROLLER_IP} -DSYSTEM_BITS=32 -DLUA_32BITS"
COMMON="-std=gnu++2b -I ./include -include ./include/prologue.hpp -isystem ./ext/fixed-string/include -isystem ./ext/GameController/examples/c -isystem ./ext/lua -ffast-math -ftemplate-backtrace-limit=0"
WARNINGS="-Wall -Wextra -Weverything -Werror -pedantic-errors -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-padded -Wno-sign-conversion -Wno-exit-time-destructors -Wno-global-constructors"
DEBUG_FLAGS="-Os -fno-omit-frame-pointer -g3 -ffunction-sections -fdata-sections -ftrapv -fstack-check -fno-optimize-sibling-calls -fno-common" #-fsanitize=address -fsanitize-address-use-after-scope -fsanitize-address-use-after-return=always"
RELEASE_FLAGS="-O3 -fomit-frame-pointer -fno-exceptions -fshort-enums -march=native -mtune=native -mllvm -polly -mllvm -polly-vectorizer=stripmine -DFS_NOASSERT -DFS_DISABLE_IO -DFP_NOSTR"

if [ ${DEBUG} -eq 1 ]; then
    FLAGS=${DEBUG_FLAGS}
    MACROS="${MACROS} -DDEBUG=1"
else
    FLAGS=${RELEASE_FLAGS}
    MACROS="${MACROS} -DDEBUG=0 -DNDEBUG=1"
fi
