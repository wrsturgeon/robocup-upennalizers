#!/bin/bash

KERNEL=`uname -r`

init(){
  # Kill all processes to reset player
  killall -q naoqi-bin naoqi hal espeak lua luajit luajit2 screen
  #
  
  # kill all screen log
  rm -f screenlog*
  rm -f /dev/shm/*
}

SCREEN_FLAGS="-dm -L -s /bin/bash -S"

reset_wb(){
  init
  uvcdynctrl -d video0 -s 'White Balance Temperature, Auto' -- 1
  echo "Reset WB. Make Sure Robot Facing Field"
  sleep 2;
  uvcdynctrl -d video0 -s 'White Balance Temperature, Auto' -- 0
  sleep 1;
}

run_dcm_vcm(){
  echo "Starting DCM..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS dcm $LUA_COM run_dcm.lua
  # Allow DCM some time to start
  sleep 1
  
  echo "Starting Cognition..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS cognition $LUA_COM run_cognition.lua
  # Allow Cognition some time to start
  sleep 3
}

run_nao_vcm(){
  # echo "Starting Naoqi..."
  # cd $PLAYER_DIR
  # screen $SCREEN_FLAGS nao_qi /usr/bin/naoqi 
  # Allow naoqi some time to start
  # sleep 3
  
  echo "Starting Cognition..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS cognition $LUA_COM run_cognition.lua
  # Allow Cognition some time to start
  sleep 3
}

run_player(){
  init
  run_dcm_vcm
 
  echo "Starting Player..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS player $LUA_COM run_main_op.lua
  
  echo "Rock and Roll!"
  screen -ls
}

run_demo(){
  init
  echo "Starting DCM..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS dcm $LUA_COM run_dcm.lua
  # Allow DCM some time to start
  sleep 1
  
  echo "Starting Cognition..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS cognition $LUA_COM run_cognition.lua
  # Allow Cognition some time to start
  sleep 3
 
  echo "Starting Player..."
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS player $LUA_COM run_demo.lua
  
  echo "Rock and Roll!"
}

run_nao(){
  init
  cd $PLAYER_DIR
  screen $SCREEN_FLAGS naohal /usr/bin/hal
  sleep 8
  screen $SCREEN_FLAGS naoqi /usr/bin/naoqi -v
}

run_visiontest(){
  init
  run_dcm_vcm
  echo "Starting Test Vision..."
  cd $PLAYER_DIR
  screen -m -L -S test $LUA_COM Test/test_vision.lua
  #
  echo "Rock and Roll!"
  screen -ls
}

run_bias(){
  init
  echo "Starting DCM..."
  cd $PLAYER_DIR
  screen -dm -L -S dcm $LUA_COM run_dcm.lua
  # Allow DCM some time to start
  sleep 1
  
  echo "Starting Setup..."
  cd $PLAYER_DIR
  screen -m -L -S bias $LUA_COM run_setup.lua
}

run_pushtest(){
  init
  echo "Starting DCM..."
  cd $PLAYER_DIR
  screen -dm -L -S dcm $LUA_COM run_dcm.lua
  # Allow DCM some time to start
  sleep 1
  
  echo "Starting Push Test.."
  cd $PLAYER_DIR
  screen -m -L -S bias $LUA_COM Test/test_push.lua
}

run_roletest(){
  init
  run_dcm_vcm
  echo "Starting Role Testing..."
  cd $PLAYER_DIR
  screen -m -L -S test $LUA_COM Test/test_role.lua
  #
  echo "Rock and Roll!"
}

run_nao_vision(){
  cd $PLAYER_DIR
  echo "Starting Parallel Vision 1..."
  screen $SCREEN_FLAGS v1 $LUA_COM run_parallel_cognition.lua 1
  sleep 1

  echo "Starting Parallel Vision 2..."
  screen $SCREEN_FLAGS v2 $LUA_COM run_parallel_cognition.lua 2
  sleep 1

  echo "Starting Vision Arbitrator..."
  screen $SCREEN_FLAGS arb $LUA_COM run_arbitrator.lua

  #echo "Run monitor..."
  #screen $SCREEN_FLAGS mon $LUA_COM run_monitor.lua
  
  echo "Rock and Roll!"
}

case "$KERNEL" in
        *aldebaran*) 
                #PLAYER_DIR=/home/nao/UPennDev/Player
                #TODO: auto detect
                PLAYER_DIR=/home/nao/RoboCup/Player
                LUA_COM=/usr/local/bin/luajit;;
        *)
                PLAYER_DIR=/home/darwin/UPennDev/Player
                LUA_COM=/usr/bin/luajit;;
esac

case "$1" in
  '')
    echo "Start Player Mode"
    run_player;;
  'nao')
    echo "start nao"
    run_nao;;
  'demo')
    echo "Start Demo Mode"
    run_demo;;
  'visiontest')
    echo "Start Vision Test Mode"
    run_visiontest;;
  'pushtest')
    echo "Start Push Test Mode"
    run_pushtest;;
  'bias')
    echo "Start Bias Setup Mode"
    run_bias;;
  'roletest')
    echo "Start Role Testing Mode"
    run_roletest;;
  'obstacle')
    echo "Start Obstacle Testing Mode"
    run_obstacle;;
  'obstacleplay')
    echo "Start Player with Obstacle"
    run_obplay;;
  'wbreset')
    echo "Reset White Balance"
    reset_wb;;
  'nao_vision')
    echo "Run Vision code for NaoV4"
    run_nao_vision;;
  'help')
    echo "[No Argu](s)     -- Player Mode"
    echo "[obstacleplay](sob) -- Player Mode with Obstacle"
    echo "[Demo](sd)       -- Demo Mode"
    echo "[pushtest](sp)       -- Push Recovery Demo Mode"
    echo "[visiontest](sv) -- Vision Debug Mode"
    echo "[bias](sb)       -- Bias Setup Mode"
    echo "[roletest](sr)   -- Role Testing Mode"
    echo "[obstacle](so)   -- Role obstacle Mode"
    echo "[wbreset](sw)   -- Reset WB Mode"
    echo "[nao_vision](sn)   -- Test Vision for Nao"
esac
